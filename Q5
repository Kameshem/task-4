public class Stack {
    private int[] data;
    private int top;
    private int capacity;

    public Stack(int capacity) {
        this.capacity = capacity;
        this.data = new int[capacity];
        this.top = -1;
    }

    public void push(int element) {
        if (top == capacity - 1) {
            System.out.println("Stack Overflow! Cannot push element onto the stack.");
            return;
        }
        data[++top] = element;
    }

    public int pop() {
        if (top == -1) {
            System.out.println("Stack Underflow! Cannot pop element from an empty stack.");
            return -1;
        }
        return data[top--];
    }

   public class Stack {
    private int[] data;
    private int top;
    private int capacity;

    public Stack(int capacity) {
        this.capacity = capacity;
        this.data = new int[capacity];
        this.top = -1;
    }

    public void push(int element) {
        if (top == capacity - 1) {
            System.out.println("Stack Overflow! Cannot push element onto the stack.");
            return;
        }
        data[++top] = element;
    }

    public int pop() {
        if (top == -1) {
            System.out.println("Stack Underflow! Cannot pop element from an empty stack.");
            return -1;
        }
        return data[top--];
    }

    public static void main(String[] args) {
        Stack stack = new Stack(5);

        // Pushing elements onto the stack
        stack.push(10);
        stack.push(20);
        stack.push(30);
        stack.push(40);

        // Popping elements from the stack
        System.out.println("Popped element: " + stack.pop());
        System.out.println("Popped element: " + stack.pop());
        System.out.println("Popped element: " + stack.pop());
        System.out.println("Popped element: " + stack.pop());
        System.out.println("Popped element: " + stack.pop()); // This should print Stack Underflow
    }
}

